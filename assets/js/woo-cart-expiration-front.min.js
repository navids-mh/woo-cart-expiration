function triggerCartPolling(e) {
    var r = { action: "woo_cart_expiration_timer", nonce: wooCartExpiration.timer_nonce };
    jQuery.post(
        wooCartExpiration.ajaxurl,
        r,
        function (e) {
            !0 !== e.success && "true" !== e.success && ((!1 !== e.success && "false" !== e.success) || destroyAllEvidence());
        },
        "json"
    );
}
function displayTimerMarkup(r) {
    var e = { action: "woo_cart_get_timer_markup", nonce: wooCartExpiration.markup_nonce };
    jQuery.post(
        wooCartExpiration.ajaxurl,
        e,
        function (e) {
            !1 !== e.success &&
                "false" !== e.success &&
                "" !== e.data.markup &&
                (removeMarkupDisplay("woo-cart-timer-wrap-id"),
                removeMarkupDisplay("woo-cart-expire-modal-wrap-id"),
                jQuery("body").append(e.data.markup.timer),
                jQuery("body").append(e.data.markup.modal),
                jQuery("head").append('<meta name="woo-cart-expiration" content="' + parseInt(wooCartExpiration.set_expired, 10) + '" />'),
                loadCartTimer(r),
                jQuery("#woo-cart-expire-countdown").countdown({ date: wooCartExpiration.set_expired, repeat: 1e3 }));
        },
        "json"
    );
}
function maybeRemoveTimer() {
    var e = { action: "woo_cart_check_remaining_count", nonce: wooCartExpiration.count_nonce };
    jQuery.post(
        wooCartExpiration.ajaxurl,
        e,
        function (e) {
            !1 !== e.success && "false" !== e.success && (!0 !== e.data.empty || destroyAllEvidence());
        },
        "json"
    );
}

function killTheCartContents() {
    var e = { action: "woo_cart_clear_expired_cart", nonce: wooCartExpiration.killit_nonce };
    jQuery.post(
        wooCartExpiration.ajaxurl,
        e,
        function (e) {
            !1 !== e.success && "false" !== e.success && !0 === e.data.cleared && 
              ("checkout" === wooCartExpiration.maybe_check ? (window.location.href = wooCartExpiration.cart_url) : 
               jQuery(document.body).trigger("wc_fragment_refresh"));
        },
        "json"
    );
}

function resetCookieAtCheckout() {
    var e = { action: "woo_cart_reset_cookie_checkout", nonce: wooCartExpiration.reset_nonce };
    jQuery.post(
        wooCartExpiration.ajaxurl,
        e,
        function (e) {
            !1 !== e.success && "false" !== e.success && jQuery("#woo-cart-expire-countdown").countdown({ date: wooCartExpiration.set_expired, repeat: 1e3 });
        },
        "json"
    );
}
function loadCartTimer(e) {
    window.cartPollID = setInterval(function () {
        triggerCartPolling();
    }, parseInt(e, 10));
}
function displayTimerValues(e, r) {
    var o = Math.floor(jQuery.now() / 1e3);
    if (parseInt(e, 10) <= parseInt(o, 10)) destroyAllEvidence();
    else {
        var a = e - o;
        if (parseInt(a, 10) < 1) destroyAllEvidence();
        else {
            var t = a,
                i = Math.floor(t / 60);
            0 < i && (t -= 60 * i), (t = 2 <= String(t).length ? t : "0" + t), r.find(".expire-minutes").text(i), r.find(".expire-seconds").text(t), setTimerDisplayClass(a);
        }
    }
}
function setTimerDisplayClass(e) {
    var r = jQuery("#woo-cart-timer-wrap-id").find(".woo-cart-timer-radial"),
        o = [10, 30, 60, 180, 300];
    parseInt(e, 10) < parseInt(o[0], 10)
        ? jQuery(".woo-cart-expire-modal-wrap").addClass("woo-cart-expire-modal-wrap-display")
        : parseInt(e, 10) < parseInt(o[1], 10)
        ? (r.addClass("woo-cart-timer-radial-expire-full"), r.addClass("woo-cart-timer-radial-expire-pulse"), r.removeClass("woo-cart-radial-animate"))
        : parseInt(e, 10) < parseInt(o[2], 10)
        ? (r.removeClass("woo-cart-timer-radial-expire-closer"), r.removeClass("woo-cart-timer-radial-expire-warning"), r.addClass("woo-cart-timer-radial-expire-soon"))
        : parseInt(e, 10) < parseInt(o[3], 10)
        ? (r.removeClass("woo-cart-timer-radial-expire-closer"), r.addClass("woo-cart-timer-radial-expire-warning"))
        : parseInt(e, 10) < parseInt(o[4], 10) && r.addClass("woo-cart-timer-radial-expire-closer");
}
function destroyAllEvidence() {
    killAllIntervals(),
        killTheCartContents(),
        removeMarkupDisplay("woo-cart-timer-wrap-id"),
        removeMarkupDisplay("woo-cart-expire-modal-wrap-id"),
        (document.cookie = wooCartExpiration.cookie_name + "=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/");
}
function killAllIntervals() {
    void 0 !== window.cartPollID && "undefined" !== window.cartPollID && window.clearInterval(window.cartPollID), void 0 !== window.cartTimeID && "undefined" !== window.cartTimeID && window.clearInterval(window.cartTimeID);
}
function removeMarkupDisplay(e) {
    var r = document.getElementById(e);
    r && r.remove();
}
jQuery(document).ready(function (o) {
    o.fn.countdown = function (e, r) {
        (timerBlock = o(this)),
            (t = e.date),
            (expireInvl = e.repeat),
            displayTimerValues(t, timerBlock),
            (window.cartTimeID = setInterval(function () {
                displayTimerValues(t, timerBlock);
            }, parseInt(expireInvl, 10)));
    };
    var e = wooCartExpiration.maybe_check,
        a = wooCartExpiration.interval,
        t = 0,
        r = document.querySelector('meta[name="woo-cart-expiration"]');
    r ? ((t = r.getAttribute("content")), loadCartTimer(a), jQuery("#woo-cart-expire-countdown").countdown({ date: t, repeat: 1e3 })) : killAllIntervals(),
        "checkout" === e && (resetCookieAtCheckout(), removeMarkupDisplay("woo-cart-expire-modal-wrap-id")),
        "order" === e && maybeRemoveTimer(),
        o(document.body).on("added_to_cart", function (e, r, o) {
            displayTimerMarkup(a);
        }),
        o(document.body).on("removed_from_cart", function (e) {
            maybeRemoveTimer();
        }),
        o(".woo-cart-expire-modal-wrap").on("click", ".woo-cart-expire-modal-close", function (e) {
            o(".woo-cart-expire-modal-block").fadeOut("slow"), maybeRemoveTimer();
        });
});
